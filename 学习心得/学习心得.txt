https://github.com/josdejong/jsoneditor
总结：jsoneditor编辑器是一个基于web的json编辑工具,用于查看、编辑、格式化和验证json。
心得：jsoneditor用在web应用中，用户可以在树编辑器、代码编辑器和纯文本编辑器等三种不同编辑模式切换，支持Chrome，Firefox，Safari，Opera，Edge等浏览器。
树编辑器可以排序数组和对象、搜索文本、标记代码和颜色选择，编辑、移动和复制字段和值；代码编辑器模式主要是代码高亮、错误提醒和格式化代码；文本编辑器模式比代码模式少了代码高亮。

https://github.com/teamtnt/tntsearch
php轻量级全文搜索引擎TNTSearch
总结：TNTSearch是一个轻量的全文搜索引擎，兼职的地理坐标搜索和文本分类器。
心得：TNTSearch有支持laravel scount的全文搜索引擎，也可以独立安装tntsearch包进行使用，如果使用sqlite作为数据库，适用于数据量为十万级别的全文搜索服务。
文本分类器，在laravel-scout-tntsearch-driver里面并没有体现，我们可以单独使用它，通指定文本和分类进行训练，同时可以保存和载入学习分类器训练结果，解释新文本的分类，
如果是低量级和低并发的应用服务相信这是个非常简单好用的分类轮子，但是php的特性，如果不将之保存在内存里面，这个文本分类器是很难应付高并发请求的。





小程序中使用canvasdrawer生成图片
总结：canvasdrawer是一个简单易用的小程序生成海报插件，一个json就可以完成分享朋友圈图片。
心得：canvasdrawer有小程序版，mpvue版和wepy版。canvasdrawer用法与小程序组件的使用方法一致，由一个json控制图片渲染，渲染完成后，将图片保存到本地，返回本地路径。
canvasdrawer的json数组配置除了框架参数（图片长宽）外，主要由图片对象参数、文本对象参数组成，主要有浮动类型、方法、定位坐标和方向等参数。图片支持远程图片，文本支持字体、颜色、加粗、下划线、删除线等等。与在后端相比，优势在于减少了服务器资源的消耗，改由用户APP内存的消耗，增大了并发数。不足之处是不支持字体、不支持剪切等等。
https://juejin.im/post/5b481d216fb9a04fdb16a88f







本周本职学习心得
Intervention Image 图片处理工具
总结：Intervention Image 开源的php图片处理包，支持两种觉的库：GD和Imagick。
心得：该类可以使php操控图片更加简易和易于阅读理解，无论是创建图像缩略图、添加水印或者对图片进行编辑，都非常轻松。
该类支持对图片进行模糊、锐化，调色，调亮度、对比度，裁剪、缩放、创建画幅，添加文本，作圈、椭圆、长方形、多边形。
但是比较遗憾的是并不能直接作圈的裁剪，也不能在创建圈后在里面填充图像。
可以在头像外围套上一层中间空心的png获取伪圆头像，但是没办法获得小程序里面套圆头像。
https://github.com/Intervention/image





https://laravelacademy.org/post/9775.html
单点登录实现案例

https://github.com/spatie/laravel-permission
用户组权限


在web可视化界面管理laravel系统配置
总结：env-manager可以令laravel-admin后台可以管理系统环境配置env。
心得：env-maneger可以帮助开发人员将env配置管理在后台罗列出来，并能自由增加更改env配置的laravel-admin扩展，
在一些只需要更新配置代码的时候，可以帮助开发人员减少更改系统配置，也可以发系统发布后，必要的时候给系统管理人员在后台对系统进行更改系统配置的便利。
但是没有权限角色的限制，没有额外的配置属性说明，过分相信用户的输入，注定了只适用于对属性名称了解的开发人员。
https://github.com/laravel-admin-extensions/env-manager


https://github.com/swooletw/laravel-swoole
laravel-swoole 让你的laravel应用性能起飞
总结：laravel-swoole可以让laravel应用运行在swoole服务器上，让性能(基础性能)有比较大的提升(文档上说近5倍)
心得：laravel-swoole提供了一个基于swoole的高性能的http服务器，可通过更改端口进行应用隔离，swoole_http_server让laravel跑在swoole的http服务上(可配合nginx将域名映射到相应端口)，swoole+php可以让php变成像go一样实现异步协程。发布代码后需要重启swoole_http_server，因为swoole会将程序挂在内存中（这就是为什么说它高性能的原因），开发时需要注意静态变量需要手动注销，不要把数组无限叠加到静态变量中，这样很容易造成内存泄漏。
不过在测试过程中，因写法不规范和有使用到静态变量的原因，导致部分程序有出现静态变量超预期的现象（每次请求都是同一个值没有再从新初始化），所以退回了原来的php-fpm多进程模式，
由此也可知，使用swoole开发php程序，必然有很多新的规范需要注意(学习成本还是有的)。
https://github.com/swooletw/laravel-swoole
https://www.swoole.com/



php artisan vendor:publish --tag=laravel-swoole


https://github.com/thomaswelton/laravel-gravatar

https://github.com/antonioribeiro/google2fa

https://github.com/vinkla/laravel-hashids


https://github.com/spatie/browsershot
laravel将网页生成pdf或者图片
总结：browsershot能将目标链接生成pdf文件或者图片，生成pdf功能相对于生成图片功能要弱不少，仅足够将网页保存为pdf文件的需求。
心得：browsershot基于puppeteer操纵谷歌内核浏览器进行工作，因此需要安装相关npm包puppeteer。
browsershot具有以下特点：
对于图片
1.控制图片质量和类型
2.设置窗口大小和指定截图区域
3.通过选择器截图选择器里面的内容
4.截取页面全部内容(从头到脚超出浏览器高度)
5.浏览器缩放
6.使用手机模式
此外，还可以设置隐藏网页背景，关闭网页弹窗，等待懒加载资源，添加CSS样式等
对于pdf
可以设置宽高外边距、页眉和页脚、隐藏显示背景，输出指定页数内容。
其他和一致可以控制浏览器cookie和session等一些安全数据，设置默认语言、代理，关闭CORS安全，发送自定义头，跳过https错误等。




https://laravel-china.org/topics/2530/the-highest-amount-of-downloads-of-the-100-laravel-extensions-recommended
100个包


在laravel中使用uuid
总结： uuid是在一定范围内唯一的机器生成的标识符，有5种不同版本，由mac地址、时间戳、名字空间、随机数等等元素生成。
心得： uuid有1-5不同版本。
版本1由当前时间戳、随机数和机器的mac地址得到，考虑到获取mac的难度，有时用IP代替mac。
版本2是把版本1的时间戳前4位替换其它参数，这个版本较少用。
版本3通过计算机名字和名字空间的MD5散列值得到，只有相同名字空间和相同计算机名才会生成相同的uuid，这个版本较为常用。
版本4是随机或伪随机出来的，出现相同概率极低。
版本5跟版本3相似，用用HAS1散列值代替MD5散列值。
一般都是采用版本3来做辅助安全的验证，实现如检查到在新设备登录了、在新设备做某些关于帐号安全或资产安全操作时，需要进行二次安全验证等。
https://github.com/webpatser/laravel-uuid
http://www.okyes.me/2016/10/06/uuid.html



https://github.com/barryvdh/laravel-snappy


2018年12月8日 07:40:18
https://github.com/clarkeash/doorman 
laravel中实现邀请注册制
总结：Doorman提供一种通过邀请码对Laravel应用进行访问限制的方法。
心得：Doorman可以生成绑定任意邮箱、任何人都可以访问、具有数量限制、有期限或无限期的邀请码，
这个邀请码可以检查有效性、通过注册兑换用来限制用户的行为操作（如注册或其它特定行为动作），
每次兑换（使用）时兑换次数加1直至对最大次数限制后再兑换将抛出异常。
设置使用时限、次数用于特定的用户兑换，无限制的可以做渠道推广使用等。


https://github.com/Laravelium/laravel-feed

2018年11月15日 21:24:16
在laravel中实现feed订阅服务
总结：laravel-feed是一个帮助开发者在laravel应用是快速创建feed订阅功能的组件。
心得：feed简单理解是对外提供的网站更新的数据接口，用于给其它站点调用和其他的终端使用。
laravel-feed支持atom和rss两种格式，可以生成带缓存的订阅源，支持生成多个feed,还可以将图片添加到feed流中(支持图片和media)。
但是现在很多网站都不再对外提供feed，而是转为内部的“feed流”，微信、微博、今日头条等社交网站和内容平台,通过朋友圈、关注、兴趣推荐等feed流吸引用户“刷刷刷”的，而feed广告已经成为一种重要的盈利手段。



https://github.com/fedeisas/laravel-mail-css-inliner

在邮件中内联CSS
总结：css-inliner是一个可以让laravel应用实现电子邮件内联CSS的开源组件。
心得：电子邮件中的编写CSS样式往常只能直接在dom目录对象上编写，无法像往常编写style.css那样便捷。
css-inliner是一个在发送邮件之前自动进行css内联的包，它可以把style或者link包中样式属性，自动转换到电子邮件的dom里面，
让样式模板能更方便的被重用。比如把传统的非JS渲染网页转换包mail邮件，免去再次书写CSS之苦。


https://github.com/barryvdh/laravel-translation-manager












https://github.com/spatie/laravel-url-signer
2018年11月7日 21:04:37
用url-signer生成安全的url
总结：url-signer是一个用于生成安全、有期限的链接地址。
心得：laravel-url-signer通过composer安装，用于生成安全的时间段内可访问的链接，
在URL添加上两个校验参数，可以通过实例方法验证（需要传入URL），
也可以在laravel中通过中间件进行验证(不需要传入URL,不通过报403错误) 。
url-signer适用于给用户提供有访问期限的URL，如：在给用户的通知里面发送3天内可以访问的链接；
对网站数据进行保护（防止撞库）；
生成临时链接，限制用户必须在指定入口进行访问。


成就系统
https://github.com/gstt/laravel-achievements#unlocking 
2018年10月31日 23:08:53
10.31易增辉本职学习分享《laravel-achievements成就系统》
总结：laravel-achievements是laravel的一个徽章成就扩展包，支持成就直接解锁和分步解锁。
心得：laravel-achievements可以给用户、团队或者任意模型对象扩展成就系统，其中包括新增成就，解锁成就，设置成就进度，查询用户已有成就，判断用户是否拥有某个成就。
成就系统是社交类平台很重要的一环，在游戏类平台中最常见，而在许多社交平台中也都有应用。
平台通过成就系统来刺激用户驻留、活动甚至消费等等。
其实某方面通过成就系统也可以对用户进行数据分析，比如说存活、分享、签到等等。
https://github.com/gstt/laravel-achievements


laravel 系统安装包
https://github.com/rashidlaasri/LaravelInstaller
2018年10月23日 19:54:18
Laravel系统安装工具包
总结：laravel-installer是一个让laravel系统拥有类似WordPress之类的CMS的引导安装包，用于满足产品安装。
心得：laravel-installer主要功能包括：检查服务器配置、检查文件夹权限、设置数据库配置、执行数据库迁移。
当我们把开发好的程序交付给不懂运维客户或者遇到无法SSH和COMPOSER的服务器环境，
就可以通过web安装向导进行安装了，安装完成后，向导地址会变成404页面。
安装完成后，更新功能是数据库命令允许迁移时请求执行数据迁移命令。
laravel-installer是支持多语言的，但是中文包完成度只有20%左右，需要更好的本地化(翻译)。
https://github.com/rashidlaasri/LaravelInstaller



laravel 事件
https://laravelacademy.org/post/6877.html

2018年10月14日 22:53:51
laravel的事件与监听器
总结：laravel事件提供简单的观察者模式(注1)实现,方便开发者订阅和监听事件。
心得：laravel中的事件和监听器可以通过更改事件配置然后使用命令行进行创建相关文件，监听器支持队列执行，事件由分发器event函数触发，
触发后系统遍历执行监听器，监听器可以执行任何需要的逻辑如通知、统计更新等等，同时监听器可以停止下层传播。
laravel中可以创建事件订阅者，在一个类中同时订阅多个事件如用户注册事件、登录事件、登出事件等等，并将其分发到监听器。
事件和监听器主要目的是为应用功能模块提供解耦的实现方案。
例如订单支付时通知管理员、下单者、供应商等。
备注:
1.观察者模式主要是将实现同一接口的多个对象注册到列表树里面，遍历执行，从而实现解耦。
